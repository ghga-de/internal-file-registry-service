{
  "title": "ModSettings",
  "description": "Modifies the orginal Settings class provided by the user",
  "type": "object",
  "properties": {
    "outbox_bucket": {
      "title": "Outbox Bucket",
      "description": "The ID of the object storage bucket that is serving as download area.",
      "example": "outbox",
      "env_names": [
        "ifrs_outbox_bucket"
      ],
      "type": "string"
    },
    "inbox_bucket": {
      "title": "Inbox Bucket",
      "description": "The ID of the object storage bucket that is serving as upload area.",
      "example": "inbox",
      "env_names": [
        "ifrs_inbox_bucket"
      ],
      "type": "string"
    },
    "permanent_bucket": {
      "title": "Permanent Bucket",
      "description": "The ID of the object storage bucket that is serving as permanent storage.",
      "example": "permanent",
      "env_names": [
        "ifrs_permanent_bucket"
      ],
      "type": "string"
    },
    "file_registered_event_topic": {
      "title": "File Registered Event Topic",
      "description": "Name of the topic used for events indicating that a new file has been internally registered.",
      "default": "internal_file_registry",
      "env_names": [
        "ifrs_file_registered_event_topic"
      ],
      "type": "string"
    },
    "file_registered_event_type": {
      "title": "File Registered Event Type",
      "description": "The type used for events indicating that a new file has been internally registered.",
      "default": "donwload_served",
      "env_names": [
        "ifrs_file_registered_event_type"
      ],
      "type": "string"
    },
    "files_to_register_topic": {
      "title": "Files To Register Topic",
      "description": "The name of the topic to receive events informing about new files to register.",
      "example": "file_ingestion",
      "env_names": [
        "ifrs_files_to_register_topic"
      ],
      "type": "string"
    },
    "files_to_register_type": {
      "title": "Files To Register Type",
      "description": "The type used for events informing about new files to register.",
      "example": "files_to_register",
      "env_names": [
        "ifrs_files_to_register_type"
      ],
      "type": "string"
    },
    "service_name": {
      "title": "Service Name",
      "default": "internal_file_registry",
      "env_names": [
        "ifrs_service_name"
      ],
      "type": "string"
    },
    "service_instance_id": {
      "title": "Service Instance Id",
      "description": "A string that uniquely identifies this instance across all instances of this service. A globally unique Kafka client ID will be created by concatenating the service_name and the service_instance_id.",
      "example": "germany-bw-instance-001",
      "env_names": [
        "ifrs_service_instance_id"
      ],
      "type": "string"
    },
    "kafka_servers": {
      "title": "Kafka Servers",
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "example": [
        "localhost:9092"
      ],
      "env_names": [
        "ifrs_kafka_servers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "db_connection_str": {
      "title": "Db Connection Str",
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "example": "mongodb://localhost:27017",
      "env_names": [
        "ifrs_db_connection_str"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "db_name": {
      "title": "Db Name",
      "description": "Name of the database located on the MongoDB server.",
      "example": "my-database",
      "env_names": [
        "ifrs_db_name"
      ],
      "type": "string"
    },
    "s3_endpoint_url": {
      "title": "S3 Endpoint Url",
      "description": "URL to the S3 API.",
      "example": "http://localhost:4566",
      "env_names": [
        "ifrs_s3_endpoint_url"
      ],
      "type": "string"
    },
    "s3_access_key_id": {
      "title": "S3 Access Key Id",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-access-key-id",
      "env_names": [
        "ifrs_s3_access_key_id"
      ],
      "type": "string"
    },
    "s3_secret_access_key": {
      "title": "S3 Secret Access Key",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-secret-access-key",
      "env_names": [
        "ifrs_s3_secret_access_key"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "s3_session_token": {
      "title": "S3 Session Token",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-session-token",
      "env_names": [
        "ifrs_s3_session_token"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "aws_config_ini": {
      "title": "Aws Config Ini",
      "description": "Path to a config file for specifying more advanced S3 parameters. This should follow the format described here: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#using-a-configuration-file",
      "example": "~/.aws/config",
      "env_names": [
        "ifrs_aws_config_ini"
      ],
      "type": "string",
      "format": "path"
    }
  },
  "required": [
    "outbox_bucket",
    "inbox_bucket",
    "permanent_bucket",
    "files_to_register_topic",
    "files_to_register_type",
    "service_instance_id",
    "kafka_servers",
    "db_connection_str",
    "db_name",
    "s3_endpoint_url",
    "s3_access_key_id",
    "s3_secret_access_key"
  ],
  "additionalProperties": false
}